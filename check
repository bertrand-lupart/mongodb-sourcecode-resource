#!/bin/bash

set -ueo pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

payload=$(cat <&0)

source_system=$(jq -r '.source.system // empty' <<< "${payload}")
if [[ -z ${system} ]]; then
    echo >&2 "Source parameter 'system' is missing"
    exit 1
fi

source_architecture=$(jq -r '.source.architecture // empty' <<< "${payload}")
if [[ -z ${source_architecture} ]]; then
    echo >&2 "Source parameter 'architecture' is missing"
    exit 1
fi

source_distribution=$(jq -r '.source.distribution // empty' <<< "${payload}")
if [[ -z ${source_distribution} ]]; then
    echo >&2 "Source parameter 'distribution' is missing"
    exit 1
fi


>&2 echo "Looking up versions of mongodb '${source_system}' '${source_architecture}' '${source_distribution}'"
latest_version=$(
    (
        curl --silent --fail --show-error --location \
                --url "https://www.mongodb.com/download-center/community/releases" \
            | sed -ne 's/mongodb-${system}-${architecture}-${distribution}-\([0-9.]\{1,\}\)\.tgz/\1/p'
    ) | sort -V | tail -n1
)

>&2 echo "Latest version ${latest_version}"

jq --null-input \
    --arg "version" "${latest_version}" \
    '[ { version: $version } ]' \
    >&3
